---
title: "Czy profil użytkownika wpływa na aktywność w aplikacji?"
author: "Aleksandra Zachajska, Konstanty Andrzejczak"
format: 
  pdf:
    toc: true
    number-sections: true
execute: 
  echo: false #niewidoczność kodu w całym pliku
  results: 'hide'   # Ukrywa wyniki tekstowe
  warning: false    # Wyłącza ostrzeżenia
  message: false    # Wyłącza komunikaty
---

```{r}
#| include: false # wylaczenie wynikow 
# Załadowanie bibliotek
library(ggplot2)
library(readr)
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(dplyr)
library(tidyr)
library(skimr)
library(knitr)

#Przypisanie danych
duolingo_data <- read_csv("duolingo_dataset.csv")
```


# Wprowadzenie

Rozwój technologii mobilnych i powszechna dostępność urządzeń elektronicznych znacząco wpłynęły na sposób, w jaki ludzie zdobywają wiedzę i rozwijają swoje umiejętności. Aplikacje mobilne, takie jak Duolingo, stanowią doskonały przykład tej rewolucji edukacyjnej, umożliwiając użytkownikom naukę języków obcych w sposób elastyczny, dostosowany do ich indywidualnych potrzeb i harmonogramu. Od momentu wprowadzenia na rynek w 2011 roku, Duolingo zdobyło ogromną popularność na całym świecie, przyciągając miliony użytkowników, którzy regularnie korzystają z aplikacji, aby doskonalić swoje umiejętności językowe.

Za sukcesem aplikacji stoi nie tylko jej innowacyjna metoda nauki, oparta na gamifikacji, ale także zdolność do dostosowania się do różnorodnych potrzeb użytkowników. Aplikacja stała się szczególnie popularna w Stanach Zjednoczonych, Europie i Azji, a jej użytkownicy reprezentują szeroką gamę krajów, kultur oraz poziomów zaawansowania. Zjawisko to skłania do refleksji nad tym, w jaki sposób profil użytkownika – obejmujący takie czynniki jak wiek, kraj pochodzenia, płeć czy wcześniejsze doświadczenia z językiem – może wpływać na jego zaangażowanie oraz efektywność nauki. Celem niniejszej pracy jest zbadanie, w jaki sposób różne cechy użytkowników aplikacji Duolingo kształtują ich aktywność, motywację oraz postępy w nauce, a także jakie czynniki mogą decydować o sukcesie w tym procesie edukacyjnym.

## Dane

Aby przeprowadzić tę analizę, posłużymy się danymi pochodzącymi z publicznego repozytorium MatthewWolff/DuolingoAnalysis na GitHubie [1]. Autor nie zamieścił informacji o licencji na jakiej udostępniono dane jednak zostaną one użyte wyłącznie w celach edukacyjnych do wykonania niniejszej analizy funkcjonalnej.

## Opis zmiennych
Zestawienie zostało wykonane przy pomocy ankiety przeprowadzonej przez Duolingo w okresie od 1 sierpnia do 5 listopada 2018 roku. Ankieta obejmowała pytania dotyczące aktywności użytkowników, korzystania z aplikacji oraz ich profilu demograficznego, takiego jak wiek, płeć czy kraj zamieszkania. Baza danych obejmuje 5488 obserwacji i 29 typów zmiennych. Dane zawierają niewielką liczbę braków, które zostaną odpowiednio obsłużone w kolejnych etapach analizy. Dokładniejsza  charakterystyka pól została przedstawiona w Tabeli 1.
   
```{r, results='asis',message=FALSE}
library(knitr)
library(dplyr)
library(kableExtra)

# Tworzenie danych opisowych dla zmiennych
variable_description <- data.frame(
  Zmienna = c(
    "user_id", "age", "annual_income", "country", "duolingo_platform", 
    "duolingo_subscriber", "duolingo_usage", "employment_status", "future_contact",
    "gender", "other_resources", "primary_language_commitment", 
    "primary_language_review", "primary_language_motivation", 
    "primary_language_motivation_followup", "primary_language_proficiency", 
    "student", "survey_complete", "time_spent_seconds", "duolingo_start_date", 
    "highest_course_progress", "took_placement_test", "purchased_subscription", 
    "highest_crown_count", "n_active_days", "n_lessons_started", 
    "n_lessons_completed", "longest_streak", "n_days_on_platform"
  ),
  Opis = c(
    "Unikalny identyfikator użytkownika",
    "Grupa wiekowa użytkownika",
    "Roczny dochód użytkownika",
    "Kraj zamieszkania użytkownika",
    "Platforma używana przez użytkownika",
    "Status subskrypcji Duolingo Plus",
    "Częstotliwość korzystania z aplikacji Duolingo",
    "Status zatrudnienia użytkownika",
    "Czy użytkownik zgodził się na kontakt w przyszłości",
    "Płeć użytkownika",
    "Liczba innych zasobów używanych do nauki języków",
    "Deklaracja zaangażowania w naukę języka głównego",
    "Przegląd postępów w nauce języka głównego",
    "Motywacja użytkownika do nauki języka głównego",
    "Dodatkowe informacje o motywacji do nauki głównego języka",
    "Samodzielnie oceniony poziom znajomości języka głównego",
    "Czy użytkownik jest studentem",
    "Czy użytkownik ukończył ankietę",
    "Czas spędzony na wypełnianiu ankiety (w sekundach)",
    "Data rozpoczęcia korzystania z aplikacji",
    "Najwyższy osiągnięty postęp w kursie (w procentach)",
    "Czy użytkownik wykonał test poziomujący",
    "Czy użytkownik wykupił subskrypcję Duolingo Plus",
    "Najwyższa liczba zdobytych koron",
    "Liczba dni, w których użytkownik był aktywny",
    "Liczba lekcji rozpoczętych przez użytkownika",
    "Liczba lekcji ukończonych przez użytkownika",
    "Najdłuższa seria dni korzystania z aplikacji",
    "Łączna liczba dni od rejestracji użytkownika w aplikacji"
  ),
  Jednostki_Wartosci = c(
    "Tekst",
    "Kategorie: 'Under 18', '18-34', '35-54', '55-74', '75 or older'",
    "Kategorie: '$0 - $25,000', '$26,000 - $75,000', '$76,000 - $150,000', '> $150,000'",
    "Kody krajów, np. 'US', 'JP', 'DE'",
    "Kategorie: 'Android', 'iOS', 'Web'",
    "Kategorie: 'Yes', 'No', 'Previously Paid'",
    "Kategorie: 'Daily', 'Weekly', 'Monthly'",
    "Kategorie: 'Employed full-time', 'Part-time', 'Retired', 'Unemployed'",
    "Prawda/Fałsz",
    "Kategorie: 'Male', 'Female', 'Other'",
    "Liczba całkowita",
    "Kategorie: 'Low', 'Medium', 'High'",
    "Kategorie: 'Poor', 'Average', 'Good'",
    "Tekst (deklaracje motywacji)",
    "Tekst (dodatkowe informacje o motywacji)",
    "Kategorie: 'Beginner', 'Intermediate', 'Advanced'",
    "Prawda/Fałsz",
    "Prawda/Fałsz",
    "Liczba całkowita (sekundy)",
    "Data (YYYY-MM-DD)",
    "Procent (0-100)",
    "Prawda/Fałsz",
    "Prawda/Fałsz",
    "Liczba całkowita",
    "Liczba całkowita",
    "Liczba całkowita",
    "Liczba całkowita",
    "Liczba całkowita",
    "Liczba całkowita"
  )
)

# Wyświetlenie tabeli z zawijaniem tekstu i mniejszą czcionką
variable_description %>%
  kbl(col.names = c("Zmienna", "Opis", "Jednostki/Wartości"),
      caption = "Pełny opis zmiennych w zbiorze danych Duolingo.") %>%
  kable_styling(latex_options = c("striped", "scale_down"), font_size = 14) %>%
  column_spec(2, width = "10cm") %>%
  column_spec(3, width = "6cm")
```


# Duolingo według badanego zbioru danych 
## Popularność aplikacji
Jak wspomniano wcześniej, aplikacja Duolingo z biegiem czasu zyskiwała coraz większą popularność na rynku międzynarodowym. Aby przeanalizować przyrost liczby użytkowników, posłużono się danymi ankietowymi, które przedstawiają liczbę nowych użytkowników w poszczególnych miesiącach. Poniższy wykres ilustruje tę dynamikę.

```{r}
# Konwersja kolumny 'duolingo_start_date' na typ Date
duolingo_data$duolingo_start_date <- as.Date(duolingo_data$duolingo_start_date, format = "%Y-%m-%dT%H:%M:%SZ")

# Ekstrakcja roku i miesiąca rozpoczęcia korzystania z aplikacji
duolingo_data <- duolingo_data %>%
  mutate(start_year_month = format(duolingo_start_date, "%Y-%m")) %>%
  filter(!is.na(start_year_month)) # Usunięcie wierszy bez dat

# Grupowanie danych według roku i miesiąca i liczenie liczby użytkowników
popularity_by_month <- duolingo_data %>%
  group_by(start_year_month) %>%
  summarise(user_count = n()) %>%
  arrange(start_year_month)

# Wykres przedstawiający wzrost popularności Duolingo w czasie (miesiące)
# Wykres z poprawionymi etykietami osi X
ggplot(popularity_by_month, aes(x = as.Date(paste0(start_year_month, "-01")), y = user_count)) +
  geom_line(color = "blue", size = 1) +
  labs(
    title = "Wzrost popularności Duolingo w czasie (miesiące)",
    x = "Data rozpoczęcia korzystania z aplikacji (rok-miesiąc)",
    y = "Liczba nowych użytkowników"
  ) +
  theme_minimal() +
  scale_x_date(
    date_labels = "%Y-%m",        # Formatowanie dat (rok-miesiąc)
    date_breaks = "6 months"      # Oznaczenia co 6 miesięcy
  ) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)  # Rotacja etykiet o 45 stopni
  )

```
Wykres ten przedstawia liczbę nowych użytkowników aplikacji w kolejnych miesiącach. Można zauważyć wyraźną tendencję wzrostu, przy czym największy przyrost liczby użytkowników miał miejsce w trzecim kwartale 2018 roku. Ta gwałtowna ekspansja może być efektem zintensyfikowanych działań marketingowych w tym okresie, a także wyróżnienia aplikacji w sklepach App Store i Google Play.

Dodatkowo, warto zaznaczyć, że Duolingo wprowadziło w tym czasie nowe funkcje, które mogły znacząco wpłynąć na wzrost liczby użytkowników. Przykładem jest system „Crown Levels”, który miał na celu motywowanie użytkowników do kontynuowania nauki poprzez zdobywanie kolejnych poziomów, co nawiązywało do mechanizmów znanych z gier mobilnych. Takie innowacje mogły zachęcić większą liczbę osób do regularnego korzystania z aplikacji, przyczyniając się tym samym do jej popularności. 

## Dlaczego Duolingo?
W kontekście oceny sukcesu aplikacji kluczową rolę odgrywa zrozumienie motywacji użytkowników, czyli czynników, które skłaniają ich do wyboru konkretnego produktu. W przypadku Duolingo, istotnym aspektem jest nie tylko sama funkcjonalność aplikacji, ale także jej zdolność do przyciągania szerokiego grona odbiorców. Brak zainteresowania ze strony użytkowników skutkowałby brakiem popytu na aplikację, co mogłoby wpłynąć na jej dalszy rozwój. Aby lepiej zrozumieć, dlaczego użytkownicy wybierają Duolingo, przeprowadzono ankietę, w której respondenci mieli możliwość wskazania czynników, które miały wpływ na ich decyzję.

```{r}
#| fig.width: 15
#| fig.height: 10
# Ładowanie bibliotek
library(ggplot2)
library(dplyr)

# Wczytanie danych
duolingo_data <- read.csv("duolingo_dataset.csv")  # Zamień na ścieżkę do swojego pliku


# Filtrowanie danych, aby uwzględnić tylko płcie "Male" i "Female" oraz usunąć "No Response"
duolingo_data <- duolingo_data %>%
  filter(
    gender %in% c("Male", "Female"),
    primary_language_motivation != "No Response"
  )

# Obliczanie procentów w grupach
duolingo_data_summary <- duolingo_data %>%
  group_by(primary_language_motivation, gender) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(primary_language_motivation) %>%
  mutate(percentage = count / sum(count) * 100)

# Tworzenie skumulowanego histogramu z procentami
ggplot(duolingo_data_summary, aes(x = primary_language_motivation, y = count, fill = gender)) +
  geom_bar(stat = "identity", position = "stack", alpha = 0.8) +
  geom_text(aes(label = paste0(round(percentage, 1), "%")), 
            position = position_stack(vjust = 0.5), size = 4.5, color = "white") +
  labs(
    title = "Skumulowany histogram motywacji z procentowym udziałem kobiet i mężczyzn",
    x = "Motywacja do nauki języka",
    y = "Liczba użytkowników",
    fill = "Płeć"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14),
    axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
    axis.title.x = element_text(size = 16),
    axis.title.y = element_text(size = 16)
  )
```
Wykres powyżej przedstawia wyniki ankiety, ukazując, jakie motywacje były najczęściej wskazywane przez użytkowników. Znacząca większość osób wskazała chęć nauki języka w celu podróżowania, co podkreśla rolę aplikacji jako narzędzia ułatwiającego komunikację w obcych krajach. Kolejnymi ważnymi powodami były chęć rozwoju zawodowego oraz potrzeba nauki nowych umiejętności w sposób wygodny i dostępny. Takie odpowiedzi świadczą o szerokim zakresie zastosowań Duolingo, który odpowiada na różnorodne potrzeby użytkowników.

## Geograficzne rozłożenie użytkowników

```{r}
# Zakładamy, że dane zostały wcześniej załadowane jako "duolingo_data"
# Plik CSV został wczytany, np.: duolingo_data <- read.csv("duolingo_dataset.csv")

# Wyodrębnienie unikalnych krajów
unikalne_kraje <- duolingo_data %>%
  select(country) %>%
  distinct()

# Słownik do mapowania kodów krajów na pełne nazwy (ISO3 -> pełne nazwy)
slownik <- c(
  "JP" = "Japan", "RU" = "Russia", "CO" = "Colombia", 
  "TW" = "Taiwan", "GB" = "United Kingdom", "BR" = "Brazil", 
  "MX" = "Mexico", "DE" = "Germany", "FR" = "France", 
  "US" = "United States of America", "PL" = "Poland"
)

# Użycie słownika do zamiany kodów na pełne nazwy
unikalne_kraje$country_full <- slownik[unikalne_kraje$country]

# Agregacja danych dla liczby użytkowników według krajów
dane_kraje <- duolingo_data %>%
  group_by(country) %>%
  summarise(users = n()) %>% # Liczba użytkowników w każdym kraju
  mutate(country_full = slownik[country]) # Dodanie pełnych nazw krajów

world <- ne_countries(scale = "small", returnclass = "sf")

# Połączenie danych użytkowników z danymi o krajach
map_data <- world %>%
  left_join(dane_kraje, by = c("name" = "country_full")) # Dopasowanie po pełnych nazwach krajów

ggplot(data = map_data) +
  geom_sf(fill = "white", color = "gray90", size = 0.1) + # Tło mapy i cienkie granice
  geom_sf(aes(fill = users), color = "gray30", size = 0.1) + # Krajowe granice i kolory
  scale_fill_gradient(
    name = "Liczba użytkowników", # Nazwa legendy
    low = "pink", high = "blue", na.value = "gray95", # Gradient od różowego do czerwonego
    guide = guide_colorbar(barwidth = 15, barheight = 0.5) # Węższa i dłuższa legenda
  ) +
  theme_minimal() + # Minimalistyczny styl
  theme(
    legend.position = "bottom", # Umieszczenie legendy poniżej mapy
    legend.title = element_text(size = 10), # Mniejsza czcionka tytułu legendy
    legend.text = element_text(size = 8), # Mniejsza czcionka w legendzie
    plot.title = element_text(size = 14), # Tytuł mapy
    plot.subtitle = element_text(size = 10) # Podtytuł mapy
  ) +
  labs(
    title = "Rozkład użytkowników Duolingo według krajów",
    caption = "Źródło: Dane Duolingo"
  )
```
W danych ankietowych zanotowano aktywność użytkowników z 10. krajów:
```{r}
print(unikalne_kraje)
```
Z danych wynika, że największa liczba użytkowników pochodzi z Francji i Meksyku, co wskazuje na ich silną obecność na rynku aplikacji edukacyjnych. Oba te kraje, ze względu na swoje rozmiary, liczbę ludności oraz popularność języka hiszpańskiego w Meksyku i francuskiego we Francji, stanowią naturalne rynki dla aplikacji uczącej języków obcych.
Dalsza analiza rozkładu użytkowników na mapie pokazuje, że Duolingo cieszy się także dużym zainteresowaniem w takich krajach jak Japonia, Rosja czy Niemcy. Zjawisko to może świadczyć o szerokim zasięgu aplikacji na różnych kontynentach, obejmujących zarówno regiony rozwinięte, jak i wschodzące rynki.
Powyższe obserwacje mogą sugerować, że Duolingo dostosowuje swoje funkcje i podejście do specyfiki każdego kraju, co pozwala na utrzymanie dużej bazy użytkowników na całym świecie.

# Profil odbiorców aplikacji
## Wiek i płeć
Patrząc na 
## Status zatrudnienia
## 

# Dynamika rozwoju użytkownika 
##  
## Kraje anglojęzyczne 

# Źródła
[1] https://github.com/MatthewWolff/DuolingoAnalysis.git



















<!-- Statystyki opisowe zmiennych liczbowych -->


```{r}
#| echo: false
#| results: 'asis'
# Wybór zmiennych liczbowych
numeric_stats <- duolingo_data %>%
  select(n_active_days, n_lessons_started, n_lessons_completed, longest_streak, n_days_on_platform) %>%
  summarise_all(list(
    mean = ~mean(., na.rm = TRUE),
    median = ~median(., na.rm = TRUE),
    sd = ~sd(., na.rm = TRUE),
    min = ~min(., na.rm = TRUE),
    max = ~max(., na.rm = TRUE)
  ))

# Wyświetlenie tabeli w formacie czytelnym
numeric_stats_long <- numeric_stats %>%
  pivot_longer(everything(), names_to = c("Variable", ".value"), names_sep = "_")

print(numeric_stats_long)

library(ggplot2)

ggplot(duolingo_data, aes(x = n_active_days)) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black") +
  labs(
    title = "Histogram liczby aktywnych dni",
    x = "Liczba aktywnych dni",
    y = "Liczba użytkowników"
  )


```




<!-- ## Wczytanie Danych -->



```{r}
# Wyświetlenie typów kolumn
# sapply(duolingo_data, class)


```

Zbiór danych Duolingo zawiera 29 zmiennych opisujących profile użytkowników oraz ich aktywność w aplikacji. Dane tekstowe, takie jak age, annual_income czy duolingo_platform, zostały sklasyfikowane jako zmienne kategoryczne, co pozwala na ich efektywną analizę. Zmienne logiczne, takie jak future_contact (zgoda na kontakt w przyszłości) czy took_placement_test (informacja o wykonaniu testu poziomującego), umożliwiają badanie binarnych decyzji użytkowników. Zmienne liczbowe, takie jak n_active_days (liczba aktywnych dni) czy n_lessons_completed (liczba ukończonych lekcji), zostały zachowane w odpowiednim formacie numerycznym, aby umożliwić analizę ilościową. Dodatkowo, duolingo_start_date, reprezentująca datę rozpoczęcia korzystania z aplikacji, została przekonwertowana na typ daty, co pozwala na analizę danych czasowych. 


```{r}
# Zamiana wartości "No Response" na NA we wszystkich kolumnach
# duolingo_data[duolingo_data == "No Response"] <- NA

# Sprawdzenie, ile wartości zostało zamienionych
# summary(duolingo_data)

```



# Analiza danych

Wyniki ankiet pochodza z roznych krajow


```{r}
# Zakładamy, że dane zostały wcześniej załadowane jako "duolingo_data"
# Plik CSV został wczytany, np.: duolingo_data <- read.csv("duolingo_dataset.csv")

# Wyodrębnienie unikalnych krajów
unikalne_kraje <- duolingo_data %>%
  select(country) %>%
  distinct()

# Słownik do mapowania kodów krajów na pełne nazwy (ISO3 -> pełne nazwy)
slownik <- c(
  "JP" = "Japan", "RU" = "Russia", "CO" = "Colombia", 
  "TW" = "Taiwan", "GB" = "United Kingdom", "BR" = "Brazil", 
  "MX" = "Mexico", "DE" = "Germany", "FR" = "France", 
  "US" = "United States of America", "PL" = "Poland"
)

# Użycie słownika do zamiany kodów na pełne nazwy
unikalne_kraje$country_full <- slownik[unikalne_kraje$country]

# Agregacja danych dla liczby użytkowników według krajów
dane_kraje <- duolingo_data %>%
  group_by(country) %>%
  summarise(users = n()) %>% # Liczba użytkowników w każdym kraju
  mutate(country_full = slownik[country]) # Dodanie pełnych nazw krajów

world <- ne_countries(scale = "small", returnclass = "sf")

# Połączenie danych użytkowników z danymi o krajach
map_data <- world %>%
  left_join(dane_kraje, by = c("name" = "country_full")) # Dopasowanie po pełnych nazwach krajów

# Tworzenie wykresu mapy
library(ggplot2)

ggplot(data = map_data) +
  geom_sf(fill = "white", color = "gray90", size = 0.1) + # Tło mapy i cienkie granice
  geom_sf(aes(fill = users), color = "gray30", size = 0.1) + # Krajowe granice i kolory
  scale_fill_gradient(
    name = "Liczba użytkowników", # Nazwa legendy
    low = "pink", high = "blue", na.value = "gray95", # Gradient od różowego do czerwonego
    guide = guide_colorbar(barwidth = 15, barheight = 0.5) # Węższa i dłuższa legenda
  ) +
  theme_minimal() + # Minimalistyczny styl
  theme(
    legend.position = "bottom", # Umieszczenie legendy poniżej mapy
    legend.title = element_text(size = 10), # Mniejsza czcionka tytułu legendy
    legend.text = element_text(size = 8), # Mniejsza czcionka w legendzie
    plot.title = element_text(size = 14, face = "bold"), # Tytuł mapy
    plot.subtitle = element_text(size = 10) # Podtytuł mapy
  ) +
  labs(
    title = "Rozkład użytkowników Duolingo według krajów",
    subtitle = "Kolor przedstawia liczbę użytkowników w danym kraju",
    caption = "Źródło: Dane Duolingo"
  )

```

jaki jest rozklad wiekowy uzytkownikow
```{r}
ggplot(duolingo_data, aes(x = age)) +
  geom_bar(fill = "steelblue") +
  labs(title = "Rozkład wiekowy użytkowników", x = "Grupa wiekowa", y = "Liczba użytkowników") +
  theme_minimal()

```






Jak aplikacja Duolingo zyskiwała na popularności?

```{r}
# Konwersja kolumny 'duolingo_start_date' na typ Date
duolingo_data$duolingo_start_date <- as.Date(duolingo_data$duolingo_start_date, format = "%Y-%m-%dT%H:%M:%SZ")

# Ekstrakcja roku i miesiąca rozpoczęcia korzystania z aplikacji
duolingo_data <- duolingo_data %>%
  mutate(start_year_month = format(duolingo_start_date, "%Y-%m")) %>%
  filter(!is.na(start_year_month)) # Usunięcie wierszy bez dat

# Grupowanie danych według roku i miesiąca i liczenie liczby użytkowników
popularity_by_month <- duolingo_data %>%
  group_by(start_year_month) %>%
  summarise(user_count = n()) %>%
  arrange(start_year_month)

# Wykres przedstawiający wzrost popularności Duolingo w czasie (miesiące)
# Wykres z poprawionymi etykietami osi X
ggplot(popularity_by_month, aes(x = as.Date(paste0(start_year_month, "-01")), y = user_count)) +
  geom_line(color = "blue", size = 1) +
  labs(
    title = "Wzrost popularności Duolingo w czasie (miesiące)",
    x = "Data rozpoczęcia korzystania z aplikacji (rok-miesiąc)",
    y = "Liczba nowych użytkowników"
  ) +
  theme_minimal() +
  scale_x_date(
    date_labels = "%Y-%m",        # Formatowanie dat (rok-miesiąc)
    date_breaks = "6 months"      # Oznaczenia co 6 miesięcy
  ) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)  # Rotacja etykiet o 45 stopni
  )

```



```{r}
library(ggplot2)
library(dplyr)

duolingo_data <- read_csv("duolingo_dataset.csv")

library(ggplot2)
library(dplyr)

# Konwersja kolumny 'duolingo_start_date' na typ Date
duolingo_data$duolingo_start_date <- as.Date(duolingo_data$duolingo_start_date, format = "%Y-%m-%dT%H:%M:%SZ")

# Filtrowanie danych (usunięcie brakujących dat)
duolingo_data <- duolingo_data %>%
  filter(!is.na(duolingo_start_date)) # Usunięcie wierszy z brakującymi datami

# Ekstrakcja roku rozpoczęcia korzystania z aplikacji
duolingo_data <- duolingo_data %>%
  mutate(start_year = format(duolingo_start_date, "%Y"))

# Grupowanie danych według roku i grup wiekowych
age_popularity_yearly <- duolingo_data %>%
  group_by(start_year, age) %>%
  summarise(user_count = n(), .groups = "drop") %>%
  arrange(start_year)

# Obliczanie udziału procentowego w każdym roku
age_popularity_yearly <- age_popularity_yearly %>%
  group_by(start_year) %>%
  mutate(
    total_users = sum(user_count),
    proportion = user_count / total_users * 100
  )

# Wykres proporcjonalnego udziału grup wiekowych w czasie (rocznym)
ggplot(age_popularity_yearly, aes(x = as.integer(start_year), y = proportion, color = age, group = age)) +
  geom_line(size = 1) +
  labs(
    title = "Proporcjonalny wzrost użytkowników w grupach wiekowych (rocznie)",
    x = "Rok",
    y = "Proporcja nowych użytkowników (%)",
    color = "Grupa wiekowa"
  ) +
  theme_minimal() +
  scale_x_continuous(breaks = seq(min(as.integer(age_popularity_yearly$start_year)), max(as.integer(age_popularity_yearly$start_year)), 1)) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)
  )



```



```{r}

# Przygotowanie danych
duolingo_data <- duolingo_data %>%
  mutate(start_year = format(as.Date(duolingo_start_date), "%Y")) %>%  # Ekstrakcja roku z daty
  group_by(start_year, age) %>%  # Grupowanie po roku i przedziale wiekowym
  summarise(users_count = n(), .groups = "drop")  # Liczba użytkowników

# Tworzenie wykresu
ggplot(duolingo_data, aes(x = start_year, y = users_count, fill = age)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Liczba osób dołączających do Duolingo w różnych przedziałach wiekowych",
    x = "Rok dołączenia",
    y = "Liczba użytkowników",
    fill = "Przedział wiekowy"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```







```{r}
# Instalacja i załadowanie wymaganych pakietów

# Wczytanie danych
duolingo_data <- read.csv("duolingo_dataset.csv")

# Tworzenie wykresu
ggplot(data = duolingo_data, aes(x = age, fill = gender)) +
  geom_bar(position = "dodge") +
  labs(
    title = "Ilość osób korzystających z Duolingo na podstawie wieku i płci",
    x = "Grupa wiekowa",
    y = "Liczba użytkowników",
    fill = "Płeć"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```





```{r}
# Instalacja i załadowanie pakietu ggplot2
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
library(ggplot2)

# Wczytanie danych
duolingo_data <- read.csv("duolingo_dataset.csv")

# Tworzenie wykresu
ggplot(data = duolingo_data, aes(x = annual_income, y = n_days_on_platform, fill = duolingo_subscriber)) +
  geom_boxplot() +
  labs(
    title = "Dochód a subskrypcja Duolingo w odniesieniu do liczby dni w aplikacji",
    x = "Przedział dochodu",
    y = "Liczba dni spędzonych w aplikacji",
    fill = "Subskrypcja"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```




```{r}
# Instalacja i załadowanie pakietu ggplot2
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
library(ggplot2)

# Wczytanie danych
duolingo_data <- read.csv("duolingo_dataset.csv")

# Tworzenie wykresu
ggplot(data = duolingo_data, aes(x = annual_income, fill = duolingo_subscriber)) +
  geom_bar(position = "dodge") +
  labs(
    title = "Dochód a subskrypcja Duolingo Plus",
    x = "Przedział dochodu",
    y = "Liczba użytkowników",
    fill = "Subskrypcja"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```


```{r}
# Instalacja i załadowanie bibliotek
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
library(ggplot2)

# Tworzenie wykresu punktowego (Scatter Plot)
ggplot(duolingo_data, aes(x = other_resources, y = n_active_days)) +
  geom_point(alpha = 0.6, color = "blue") +
  labs(
    title = "Liczba innych zasobów a liczba aktywnych dni w Duolingo",
    x = "Liczba innych zasobów",
    y = "Liczba aktywnych dni"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14),
    axis.title = element_text(size = 12)
  )

```



```{r}
# Ensure 'duolingo_subscriber' is a factor
duolingo_data$duolingo_subscriber <- as.factor(duolingo_data$duolingo_subscriber)

# Create the boxplot
ggplot(duolingo_data, aes(x = duolingo_subscriber, y = n_active_days, fill = duolingo_subscriber)) +
  geom_boxplot() +
  labs(
    title = "Porównanie liczby aktywnych dni w grupach subskrybentów Duolingo",
    x = "Status subskrypcji",
    y = "Liczba aktywnych dni"
  ) +
  theme_minimal()

```
```{r}
# Test t-Studenta
# t_test_result <- t.test(n_active_days ~ duolingo_subscriber, data = duolingo_data)
# print(t_test_result)
# Test Wilcoxona
# wilcox_test_result <- wilcox.test(n_active_days ~ duolingo_subscriber, data = duolingo_data)
# print(wilcox_test_result)


```

```{r}
# Średnia liczba aktywnych dni w grupach subskrypcyjnych
ggplot(duolingo_data, aes(x = duolingo_subscriber, y = n_active_days, fill = duolingo_subscriber)) +
  stat_summary(fun = mean, geom = "bar", width = 0.6) +
  stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
  labs(
    title = "Średnia liczba aktywnych dni w grupach subskrypcyjnych",
    x = "Status subskrypcji",
    y = "Średnia liczba aktywnych dni"
  ) +
  theme_minimal()

```

Autor nie zamieścił informacji o licencji na jakiej udostępniono dane jednak zostaną one użyte jedynie do wykonania analizy funkcjonalenj w poniższej pracy. 
Znalezione dane zostały zebrane za pomocą ankiety przeprowadzonej przez Duolingo, które miałe miejsce od 1 sierpnia do 5 listopada 2018 roku.  

```{r}
#| include: false # wylaczenie wynikow 
# Konwersja kolumny 'duolingo_start_date' na typ Date
duolingo_data$duolingo_start_date <- as.Date(duolingo_data$duolingo_start_date, format = "%Y-%m-%dT%H:%M:%SZ")

# Ekstrakcja roku rozpoczęcia korzystania z aplikacji
duolingo_data <- duolingo_data %>%
  mutate(start_year = format(duolingo_start_date, "%Y")) %>%
  filter(!is.na(start_year)) # Usunięcie wierszy bez dat

# Grupowanie danych według roku i liczenie liczby użytkowników
popularity_by_year <- duolingo_data %>%
  group_by(start_year) %>%
  summarise(user_count = n()) %>%
  arrange(start_year)

# Wykres przedstawiający wzrost popularności Duolingo
ggplot(popularity_by_year, aes(x = as.numeric(start_year), y = user_count)) +
  geom_line(color = "blue", size = 1) +
  geom_point(color = "red", size = 3) +
  labs(
    title = "Wzrost popularności Duolingo w czasie",
    x = "Rok rozpoczęcia korzystania z aplikacji",
    y = "Liczba nowych użytkowników"
  ) +
  theme_minimal() +
  scale_x_continuous(breaks = as.numeric(popularity_by_year$start_year))

```

```{r}
# Wczytanie potrzebnych bibliotek
library(ggplot2)
library(dplyr)
library(readr)

# Wczytanie danych z pliku CSV
duolingo_data <- read_csv("duolingo_dataset.csv")

# Konwersja kolumny 'duolingo_start_date' na typ Date
duolingo_data$duolingo_start_date <- as.Date(duolingo_data$duolingo_start_date, format = "%Y-%m-%dT%H:%M:%SZ")

# Ekstrakcja roku rozpoczęcia korzystania z aplikacji
duolingo_data <- duolingo_data %>%
  mutate(
    start_year = format(duolingo_start_date, "%Y"),
    country = country
  ) %>%
  filter(!is.na(start_year) & !is.na(country)) # Usunięcie brakujących wartości

# Grupowanie danych według roku i kraju
popularity_by_year_country <- duolingo_data %>%
  group_by(start_year, country) %>%
  summarise(user_count = n(), .groups = "drop") %>%
  arrange(start_year)

# Wykres pokazujący wzrost popularności Duolingo w różnych krajach
ggplot(popularity_by_year_country, aes(x = as.numeric(start_year), y = user_count, color = country)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  labs(
    title = "Wzrost popularności Duolingo w różnych krajach",
    x = "Rok rozpoczęcia korzystania z aplikacji",
    y = "Liczba nowych użytkowników",
    color = "Kraj"
  ) +
  theme_minimal() 
  scale_x_continuous(breaks = as.numeric(unique(popularity_by_year_country$start_year)))
```


```{r}
# Wczytanie potrzebnych bibliotek
library(ggplot2)
library(dplyr)
library(readr)

# Wczytanie danych z pliku CSV
duolingo_data <- read_csv("duolingo_dataset.csv")

# Analiza platform używanych przez użytkowników
platform_usage <- duolingo_data %>%
  group_by(duolingo_platform) %>%
  summarise(user_count = n(), .groups = "drop")

# Wykres pokazujący platformy użytkowników
ggplot(platform_usage, aes(x = reorder(duolingo_platform, -user_count), y = user_count, fill = duolingo_platform)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Liczba użytkowników korzystających z różnych platform",
    x = "Platforma",
    y = "Liczba użytkowników"
  ) +
  theme_minimal() +
  theme(legend.position = "none") +
  coord_flip()

```

```{r}
unikalne_kraje <- duolingo_data %>% 
  select(country) %>% 
  distinct()

# Zmiana nazw krajów na pełne nazwy przy użyciu słownika
slownik <- c("JP" = "Japan", "RU" = "Russian Federation", "CO" =  "Colombia", "TW" = "Taiwan", "GB" = "United Kingdom", "BR" = "Brazil", "MX" = "Mexico", "DE" = "Germany", "FR" = "France", "US" = "United States")

# Użycie slownika do zamiany kodów na pełne nazwy
kraje <- unikalne_kraje$country
kraje_z_nazwami <- slownik[kraje]

# Utworzenie ramki danych z pełnymi nazwami krajów
unikalne_kraje$country <- kraje_z_nazwami
print(unikalne_kraje)

```


```{r}
# Czyszczenie danych - usunięcie "no response" i zastąpienie ich NA
duolingo_data_clean <- duolingo_data %>%
  mutate(
    age = ifelse(age == "no response", NA, age),
    employment_status = ifelse(employment_status == "no response", NA, employment_status),
    gender = ifelse(gender == "no response", NA, gender)
  ) %>%
  filter(!is.na(age) & !is.na(employment_status) & !is.na(gender) & !is.na(country))

# Analiza: liczba osób w różnych wymiarach zatrudnienia w każdym kraju
employment_by_country <- duolingo_data_clean %>%
  group_by(country, employment_status) %>%
  summarise(count = n(), .groups = "drop")

# Analiza: liczba osób w różnych grupach wiekowych w każdym kraju
age_by_country <- duolingo_data_clean %>%
  group_by(country, age) %>%
  summarise(count = n(), .groups = "drop")

# Analiza: liczba osób według płci w każdym kraju
gender_by_country <- duolingo_data_clean %>%
  group_by(country, gender) %>%
  summarise(count = n(), .groups = "drop")

# Wykres 1: Zatrudnienie w każdym kraju
employment_plot <- ggplot(employment_by_country, aes(x = country, y = count, fill = employment_status)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Liczba osób według statusu zatrudnienia w różnych krajach",
    x = "Kraj",
    y = "Liczba osób",
    fill = "Status zatrudnienia"
  ) +
  theme_minimal() +
  coord_flip()

# Wykres 2: Grupy wiekowe w każdym kraju
age_plot <- ggplot(age_by_country, aes(x = country, y = count, fill = age)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Liczba osób w różnych grupach wiekowych w różnych krajach",
    x = "Kraj",
    y = "Liczba osób",
    fill = "Grupa wiekowa"
  ) +
  theme_minimal() +
  coord_flip()

# Wykres 3: Płeć w każdym kraju
gender_plot <- ggplot(gender_by_country, aes(x = country, y = count, fill = gender)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Liczba osób według płci w różnych krajach",
    x = "Kraj",
    y = "Liczba osób",
    fill = "Płeć"
  ) +
  theme_minimal() +
  coord_flip()

# Wyświetlenie wykresów
print(age_plot)
print(gender_plot)

```

```{r}
# Czyszczenie danych - usunięcie "No Response" i zastąpienie ich NA
duolingo_data_clean <- duolingo_data %>%
  mutate(
    age = ifelse(age == "No Response", NA, age),
    employment_status = ifelse(employment_status == "No Response", NA, employment_status),
    gender = ifelse(gender == "No Response", NA, gender)
  ) %>%
  filter(!is.na(age) & !is.na(employment_status) & !is.na(gender) & !is.na(country))

# Analiza: liczba osób w różnych wymiarach zatrudnienia w każdym kraju
employment_by_country <- duolingo_data_clean %>%
  filter(!is.na(employment_status)) %>%  # Usunięcie braków w zatrudnieniu
  group_by(country, employment_status) %>%
  summarise(count = n(), .groups = "drop")

# Wykres 1: Zatrudnienie w każdym kraju
employment_plot <- ggplot(employment_by_country, aes(x = country, y = count, fill = employment_status)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Liczba osób według statusu zatrudnienia w różnych krajach",
    x = "Kraj",
    y = "Liczba osób",
    fill = "Status zatrudnienia"
  ) +
  theme_minimal() +
  coord_flip()

# Wyświetlenie wykresu
print(employment_plot)

```

# Śmietnik

## Wprowadzenie

We wprowadzeniu napisać z jakich dat są zebrane dane i zaznaczyć daty widoczne w zestawieniu kiedy uczestnicy podlegający spisowi rozpoczeli korzystanie z aplikacji odnieść się do daty wprowadzenia aplikacji na rynek i mniej więcej kiedy aplikacja stała się popularna można dołaczyć dane dotyczące dynamiki wejścia na rynki w różnych krajac w szczególnosci tych uwzględnionych w zestawieniu

```{r}
#| echo: false
2 * 2
```

## Kto sięga po aplikację (ogólna charakterysyka użytkowników)?

Analiza jakie kraje są brane pod uagę w kazdym z nich możemy zestawić ile jest osób zatrudnionych w jakim wymiarze i ilu w jakim wieku jakiej płci (ogólnie info)

\## Profil użytkownika

Analiza profilu użytkowników dokładna pod katem używania apliakcji tu zestawić: -\> zaangażowanie -\> motywację -\> czy miał już stycznosc z językiem -\> poziom deklarowany vs wyznaczony w aplikacji

\## Dynamika rozwoju przy użyciu aplikacji -\> Zestawienie liczby rozpoczętych lekcji w zestawieniu z zakończonymi -\>liczba dni na pltformie vs liczba aktywnych dni -\> najdłuższa seria